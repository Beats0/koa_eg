<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Login</title>
  <link href="https://cdn.bootcss.com/twitter-bootstrap/4.1.0/css/bootstrap.min.css" rel="stylesheet">
  <style>
    [v-cloak] { display:none; }
    .trans {
      white-space: pre-wrap;
      word-break: break-word;
    }
  </style>
</head>
<body>
<div id="app" class="container" v-cloak>
  <div class="row">
    <div class="col-md-8">
      <form action="/user/login" method="POST" role="form">
        <legend>Login <a href="/user/register">Register</a></legend>
        <div class="form-group">
          <label for="">User name</label>
          <input type="text" class="form-control" name="uname" v-model="uname">
          <label for="">Email</label>
          <input type="text" class="form-control" name="email" v-model="email">
          <label for="">Password</label>
          <input type="password" class="form-control" name="pwd" v-model="pwd">
        </div>
        <button type="submit" class="btn btn-primary">login with form</button>
      </form>
      <button class="btn btn-primary" @click="submit">login with vue and axios</button>
      <button class="btn btn-primary" @click="getInfo" v-if="isLogin">getInfo</button>
      <div v-if="isLogin">
        <img :src="session.avatar" :alt="uname">
        <h5>uname: {{ session.uname }}</h5>
        <h5>id: {{ session._id }}</h5>
      </div>
      <p class="trans"  v-if="isLogin"><b>your token:</b> {{ token }}</p>
    </div>
  </div>
</div>
<script src="https://vuejs.org/js/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
  // axios
  axios.interceptors.request.use(
    config => {
      const token = localStorage.getItem('TOKEN');
      const expired = Number(localStorage.getItem('EXPIRED'))
      console.log('expired', expired)
      // 时间戳过期检验
      if (token && expired > Date.now()) {
        // Bearer是JWT的认证头部信息
        config.headers.common['Authorization'] = 'Bearer ' + token;
      }
      return config;
    },
    error => {
      return Promise.reject(error);
    }
  );
  // 全剧过滤
  axios.interceptors.response.use(
    response => {
      if (response.data.type !== 'success' && response.data.msg) {
        window.alert(response.data.msg)
      }
      return response;
    },
    error => {
      if (error.response.status === 401) {
        // 清除token
        localStorage.removeItem('TOKEN');
        localStorage.removeItem('EXPIRED')
        window.alert('401 token已过期')
      } else {
        window.alert('系统出现错误')
      }
      return Promise.reject(error);
    }
  );

  // vue
  var app = new Vue({
    el: '#app',
    created() {
      const token = localStorage.getItem('TOKEN');
      const expired = Number(localStorage.getItem('EXPIRED'))
      if (token && expired > Date.now()) {
        this.isLogin = true
        this.getInfo()
      }
      this.token = token
    },
    data: {
      message: 'Hello Vue!',
      uname: '',
      email: '',
      pwd: '',
      token: '',
      isLogin: false,
      session: {}
    },
    methods: {
      submit () {
        const data = {
          uname: this.uname,
          pwd: this.pwd,
          email: this.email
        }
        axios.post('/user/login', data).then(({ data }) => {
          // session
          if (data.type === 'success') {
            this.token = data.token
            localStorage.setItem('TOKEN', data.token);
            localStorage.setItem('EXPIRED', data.expired);
          }
        })
      },
      getInfo () {
        axios.get('/user/info').then(({ data })=> {
          this.session = data.session
        })
      }
    }
  })
</script>
</body>
</html>
